#!/usr/bin/env bash

set -o nounset -o pipefail

# These commands are halfway between keybind and `oneliners.bash` material.  Plus, there's
# only so many keys on a keyboard.
readarray -t fzf_output < <(
   fzf --prompt='$ ' --color='dark,hl:green:regular,fg+:white:regular,hl+:green:regular:reverse,query:white:regular,info:gray:regular,prompt:white:regular,pointer:green:bold' \
       --with-nth -1 -d :: --print-query --expect=ctrl-e,alt-enter <<'EOF'
lock
dates
background::~/dotfiles/misc/keybind-scripts/wifail::wifail
background::~/dotfiles/misc/keybind-scripts/ethinfo::ethinfo
killall xbindkeys; xbindkeys
$FIREFOX --new-tab $(gatewayip) # try to open a router's web interface
cat /sys/class/power_supply/BAT0/{energy,charge}_{now,full} 2>/dev/null
auracle outdated
for i in {1..8}; do man -k -s "$i" . | awk '{ print $1, $2 }' > "/tmp/man$i.txt"; done
i3-msg exit
i3-msg -q reload
i3-msg restart
ip link
ip address
ip address show eth0
ip address show wlan0
ip route
ip route show dev wlan0
iw wlan0 info
iw wlan0 link
sudo iw dev wlan0 scan
systemctl suspend
systemctl poweroff
systemctl reboot
xset dpms force off # turn off the display
xrandr --output LVDS-1 --off # disable the internal display
xrandr --output VGA-0 --auto --output HDMI-0 --auto # enable connected and disable disconnected external monitors
xrandr --output VGA-0 --off --output HDMI-0 --off # disable external monitors
xrandr --output HDMI-0 --auto --right-of LVDS # FIXME: untested
cat /sys/class/power_supply/BAT0/status
charge_thresholds
charge_thresholds 40 60
charge_thresholds 55 60
charge_thresholds 60 80
charge_thresholds 75 80
charge_thresholds 95 100
toggle_thinklight
browse::meribold.org
browse::snapcraft.io/muccadoro/metrics
browse::https://www.fastmail.com::fastmail.com
browse::https://www.fastmail.com/contacts::fastmail.com/contacts
browse::file:///usr/share/doc/neomutt/manual.html
browse::file:///usr/share/doc/arch-wiki/html/en/Network_configuration.html
browse::moz-extension://bbd71618-3b7d-474d-94c7-2e062c6a5870/onetab.html::OneTab
browse::wiki.meribold.org
browse::wiki.meribold.org/Lists
browse::wiki.meribold.org/rec/Words
browse::wiki.meribold.org/edit/rec/Words
browse::github.com/meribold
browse::github.com/meribold/dotfiles
browse::github.com/meribold/dotfiles/commits
browse::https://play.google.com/apps/publish::Google Play Console
browse::youtube.com/feed/history
browse::youtube.com/playlist?list=WL
evalbrowse::wiki.meribold.org/$(date -I)
background::xdotool type "$(date -I)"
background::xdotool type "# $(date -I)"$'\r\r'"[[$(date +'%Y')]]"$'\r\r---\r\r'
background::exec dosbox -conf ~/.dosbox/jill.conf::Jill of the Jungle
background::NetHack
background::exec gimp::GIMP
background::exec emacs::Emacs
background::exec inkscape::Inkscape
background::exec anki::Anki
background::exec screenkey::screenkey
background::exec qutebrowser::qutebrowser
background::exec chromium::Chromium
background::exec $FIREFOX::Firefox
background::exec $FIREFOX --ProfileManager::Firefox (profile manager)
background::exec firefox-developer-edition::Firefox Developer Edition
background::exec firefox-developer-edition --ProfileManager::Firefox Developer Edition (profile manager)
background::exec signal-desktop --force-device-scale-factor=1.333333333::Signal Desktop
pkill screenkey
xrandr
xterm::ssh bamfurlong
xterm::ssh -t bamfurlong screen -S default -DR
xterm::ssh -t bamfurlong screen -S minecraft -DR
xterm::ssh -t athrad screen -UDR
xterm::ssh shirebourn
xterm::ssh baranduin
xterm::less /var/log/pacman.log
xterm::less ~/.xinit.log
background::exec xterm -e dash -c 'cd ~/dotfiles && bash'::~/dotfiles
background::exec xterm -name 'floating xterm' -geometry 100x25 -e dash -c 'cd ~/dotfiles && bash'::~/dotfiles (floating xterm)
background::exec xterm -name 'floating xterm' -geometry 125x38 -hold -e 'curl --silent --fail wttr.in | head -n -2'::curl wttr.in
checkupdates
xwininfo
cal -3
cal -y
xprop
sensors
ascii
khard show lukas waymann
nostdout::redshift -PO 3500
nostdout::redshift -x
killall -SIGUSR1 dunst # pause Dunst
killall -SIGUSR2 dunst # resume Dunst
sed -n '/^## Rebooting$/,/^## /p' ~/wiki/Bamfurlong.md | head -n -2
man::7 ascii::man 7 ascii
man::gitglossary::man gitglossary
man::gitrevisions::man gitrevisions
time cat
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --geometry=25%-4-4 /dev/video0
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --saturation=-70 --geometry=32%-4-4 /dev/video0
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --saturation=-100 --geometry=32%-4-4 /dev/video0
gpg-connect-agent reloadagent /bye
background::fcitx && sleep 0.5 && xmodmap ~/dotfiles/misc/xmodmaprc
killall fcitx
xbindkeys -k
::ssh_esgaroth_quota::ssh esgaroth quota
df -Th
free -h
sudo ip link set wlan0 down
sudo ip link set wlan0 up
mpc clear && mpc add / && mpc shuffle # make MPD queue all songs in random order
mpc clear && mpc load favorites.m3u
umount ~/t5a
umount ~/v8x
sysctl kernel.sysrq
route -n # get the IP address of the default gateway (router)
rclone ls dropbox:
rclone lsl dropbox:
pydoc str
i3-msg -t get_workspaces | jq -C
background::exec feh --sort mtime ~/.config/signal/attachments # view photos from Signal
background::exec feh --sort mtime ~/screenshots
cat /proc/sys/kernel/sysrq
cat /sys/module/usbcore/parameters/autosuspend
cat /proc/cmdline # check what kernel parameters we booted with
>/dev/null trans -speak en: spinach
amixer set Master mute
kill -l
ipa
iipa
curl -s ipinfo.io
EOF
) || exit $?

gatewayip() {
   ip route | awk '/^def/{print $3}'
}

NetHack() {
   exec xterm -xrm 'XTerm*VT100.renderFont:true' -fs 13 -e nethack
}

lock() {
   nohup lock &>/dev/null &
   sleep 0.001
   if [[ $(cat /sys/class/power_supply/BAT0/status) == 'Discharging' ]]; then
      xset dpms force off
   fi
}

# A precondition of this function is $1 <= $2 (or $# == 0).
charge_thresholds() {
   if (( $# == 0 )); then
      cat /sys/class/power_supply/BAT0/charge_{start,stop}_threshold
      return
   fi
   # This can fail because it may try to set charge_start_threshold to a value bigger than
   # the current charge_stop_threshold.
   echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   retry=$?
   # In theory this fails when trying to set charge_stop_threshold to a value smaller than
   # charge_start_threshold, but we already adjusted charge_start_threshold.  If adjusting
   # charge_start_threshold failed because the new charge_start_threshold ($1) is bigger
   # than the old charge_stop_threshold, then the new charge_stop_threshold ($2) is bigger
   # than the old charge_start_threshold, and we are fine:
   #    old charge_start_threshold <= old charge_stop_threshold < $1 <= $2
   echo "$2" | sudo tee /sys/class/power_supply/BAT0/charge_stop_threshold >/dev/null
   if (( retry )); then
      echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   fi
}

cal() {
   unbuffer cal "$@"
}

toggle_thinklight() {
   echo $((($(cat '/sys/class/leds/tpacpi::thinklight/brightness') + 1) % 2)) |
      sudo dd status=none of='/sys/class/leds/tpacpi::thinklight/brightness'
}

ssh_esgaroth_quota() {
   i3-msg 'resize set 865 95; move position center' &>/dev/null && ssh esgaroth quota
}

key=${fzf_output[1]}

if [[ $key == alt-enter || ${#fzf_output[@]} == 2 ]]; then
   # Alt+Enter was used or there is no match.  We'll run the query.
   selection=${fzf_output[0]}
else
   selection=${fzf_output[2]}
fi

[[ $selection ]] || exit $?

if [[ $selection != *::* ]]; then
   command_type=
   selected_command=$selection
else
   command_type=${selection%%::*}
   selected_command=${selection#*::}
   selected_command=${selected_command%::*}
fi

if [[ $key == ctrl-e ]]; then
   read -rep '$ ' -i "$selected_command" selected_command
fi

if [[ $command_type == background ]]; then
   # I also tried using `disown` and `nohup`, but neither prevents programs from being
   # killed immediately when XBindKeys launches this script with `xterm -e`.
   trap '' SIGHUP
   eval "$selected_command" &
elif [[ $command_type == '' ]]; then
   output=$(eval "$selected_command" 2>&1)
elif [[ $command_type == browse ]]; then
   trap '' SIGHUP
   $BROWSER "$selected_command" &
   i3-msg '[class="^firefox$"] focus'
elif [[ $command_type == evalbrowse ]]; then
   trap '' SIGHUP
   eval '$BROWSER' "$selected_command" &
   i3-msg '[class="^firefox$"] focus'
elif [[ $command_type == xterm ]]; then
   trap '' SIGHUP
   eval 'exec xterm -e' "$selected_command" &
elif [[ $command_type == man ]]; then
   trap '' SIGHUP
   # shellcheck disable=SC2086
   xterm -sl 0 -name 'floating man' -geometry 100x58 -e man --nj --nh $selected_command &
elif [[ $command_type == nostdout ]]; then
   output=$(eval "$selected_command" 2>&1 1>/dev/null)
fi

if [[ $output ]]; then
   if (( $(wc -l <<< "$output") >= 14 )); then
      printf '$ %s\n%s' "$selected_command" "$output" | less -R
   else
      tput civis
      if [[ $key != ctrl-e ]]; then
         printf '$ %s\n' "$selected_command"
      fi
      printf '%s' "$output"
      read -rn1
   fi
fi
