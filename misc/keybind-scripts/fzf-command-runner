#!/usr/bin/env bash

set -o nounset -o pipefail

export GPG_TTY=$(tty)

# These commands are halfway between keybind and `oneliners.bash` material.  Plus, there's
# only so many keys on a keyboard.
readarray -t fzf_output < <(
   fzf --prompt='$ ' --color='dark,hl:green:regular,fg+:white:regular,hl+:green:regular:reverse,query:white:regular,info:gray:regular,prompt:white:regular,pointer:green:bold' \
       --with-nth -1 -d :: --print-query --expect=ctrl-e,alt-enter <<'EOF'
lock
autosize::dates
background::~/dotfiles/misc/keybind-scripts/wifail::wifail
background::~/dotfiles/misc/keybind-scripts/ethinfo::ethinfo
background::~/dotfiles/misc/keybind-scripts/dmesg::dmesg
killall -HUP xbindkeys
killall xbindkeys; xbindkeys
killall xcape; xcape
cat ~/.xresources/* | xrdb
cat ~/.xresources/* | xrdb -merge
cat ~/.xresources/* | xrdb -merge && { killall xbindkeys; xbindkeys; }
$FIREFOX --new-tab $(gatewayip) # try to open a router's web interface
cat /sys/class/power_supply/BAT0/{energy,charge}_{now,full} 2>/dev/null
auracle outdated
sudo mandb -q && for i in 0:0p:1:1p:6:8 2 3:3p:3type {4..8}; do man -k -s "$i" . | awk '{ print $1, $2 }' > "/tmp/man$i.txt"; done
i3-msg exit
i3-msg -q reload
i3-msg restart
autosize::ip link
autosize::ip address
autosize::ip address show wlan0
autosize::ip route
autosize::iw wlan0 info
autosize::iw wlan0 link
::resize 68 88; sudo iw dev wlan0 scan::iw dev wlan0 scan
systemctl suspend
systemctl poweroff
systemctl reboot
xset dpms force off # turn off the display/screen/monitor
autosize::xrandr | sed 's/ \+$//'::xrandr
xrandr --rate 60
xrandr --rate 120
xrandr --listmonitors
xrandr --auto
background::exec arandr::arandr
cat /sys/class/power_supply/BAT0/status
charge_thresholds
charge_thresholds 60 65
charge_thresholds 65 70
charge_thresholds 70 75
charge_thresholds 75 80
charge_thresholds 80 85
charge_thresholds 95 100
browse::https://meribold.org::meribold.org
browse::https://staging.meribold.org::staging.meribold.org
browse::https://testing.meribold.org::testing.meribold.org
browse::snapcraft.io/muccadoro/metrics
browse::https://app.fastmail.com::fastmail.com
browse::https://app.fastmail.com/contacts::fastmail.com/contacts
browse::https://app.fastmail.com/calendar::fastmail.com/calendar
browse::https://app.fastmail.com/settings/masked
browse::https://app.fastmail.com/settings/masked/new
browse::https://app.fastmail.com/mail/compose
browse::https://console.aws.amazon.com::console.aws.amazon.com
browse::file:///usr/share/doc/neomutt/manual.html
browse::file:///usr/share/doc/arch-wiki/html/en/Network_configuration.html
browse::moz-extension://bbd71618-3b7d-474d-94c7-2e062c6a5870/onetab.html::OneTab
browse::https://wiki.meribold.eu/Home::wiki.meribold.eu
browse::github.com/meribold
browse::github.com/meribold/dotfiles
browse::github.com/meribold/dotfiles/commits
browse::https://play.google.com/apps/publish::Google Play Console
browse::youtube.com/feed/history
browse::youtube.com/playlist?list=WL
browse::detectportal.firefox.com
browse::https://www.computerbase.de::ComputerBase
browse::https://meribold.goatcounter.com::GoatCounter
evalbrowse::wiki.meribold.eu/$(date -I)
background::xdotool type "$(date -I)"
background::xdotool type "# $(date -I)"$'\r\r'"[[$(date +%Y)]]"$'\r\r---\r\r'
background::xdotool type REDACTED # my phone number
background::xdotool type REDACTED # my phone number
xdotool key Caps_Lock # CAPS LOCK
background::echo -n REDACTED | xsel -b # my phone number
background::echo -n REDACTED | xsel -b # my phone number
background::exec dosbox -conf ~/.dosbox/jill.conf::Jill of the Jungle
background::exec dosbox -conf ~/.dosbox/conquest.conf::Conquest
background::NetHack
background::exec gimp::GIMP
background::exec emacs::Emacs
background::exec inkscape::Inkscape
background::exec anki::Anki
background::exec screenkey::screenkey
background::exec qutebrowser::qutebrowser
background::exec chromium::Chromium
background::exec $FIREFOX::Firefox
background::exec $FIREFOX --ProfileManager::Firefox (profile manager)
background::LC_TIME=en_SE.UTF-8 exec telegram-desktop::Telegram
background::exec signal-desktop --force-device-scale-factor=1.84::Signal
background::exec gcolor3::gcolor3
pkill screenkey
xterm::ssh bamfurlong
xterm::ssh -t bamfurlong screen -S default -DR
xterm::ssh bamfurlong journalctl -fu gollum
xterm::ssh -t buckland screen -S minecraft -DR
background::exec xterm -name irssi -geometry 96x54 -e ssh -t bamfurlong screen -S irssi -x \|\| screen -S irssi irssi::Irssi
xterm::ssh shirebourn # Ubiquiti UniFi AP
xterm::ssh baranduin # Ubiquiti EdgeRouter X
xterm::less /var/log/pacman.log
xterm::less ~/.xinit.log
xterm::tail -F ~/.xinit.log
background::exec xterm -e dash -c 'cd ~/dotfiles && bash'::~/dotfiles
background::exec xterm -name 'floating xterm' -geometry 100x25 -e dash -c 'cd ~/dotfiles && bash'::~/dotfiles (floating xterm)
background::exec xterm -name 'floating xterm' -geometry 125x38 -hold -e 'curl --silent --fail wttr.in | head -n -2'::curl wttr.in
checkupdates
::xwininfo; resize 28 80::xwininfo
noless::resize 8 20; cal::cal
noless::resize 8 64; cal -3::cal -3
noless::resize 34 66; cal -y::cal -y
::xprop; resize 30 80::xprop
sensors
ascii
noless::resize 23 63; cat ~/wiki/Erm.txt::cat Erm.txt
nostdout::redshift -PO 3500
nostdout::redshift -x
killall -SIGUSR1 dunst # pause Dunst
killall -SIGUSR2 dunst # resume Dunst
sed -n '/^## Rebooting$/,/^## /p' ~/wiki/Bamfurlong.md | head -n -2
man::7 ascii::man 7 ascii
man::gitglossary::man gitglossary
man::gitrevisions::man gitrevisions
time cat
background::sleep 0.1; maim | xclip -selection clipboard -t image/png::maim | xclip -selection clipboard -t image/png
background::maim -su -b 2 -c .843,.373,.373 --nokeyboard | xclip -selection clipboard -t image/png
zbarimg -q <(maim)
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --geometry=25%-4-4 /dev/video0
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --saturation=-70 --geometry=32%-4-4 /dev/video0
background::exec mpv --no-osc --vf=hflip --video-unscaled=yes -x11-name='webcam feed' --saturation=-100 --geometry=32%-4-4 /dev/video0
gpg-connect-agent reloadagent /bye
xkbcomp ~/dotfiles/misc/keymap.xkb "$DISPLAY"
background::fcitx && sleep 0.5 && xkbcomp ~/dotfiles/misc/keymap.xkb "$DISPLAY"
killall fcitx
xbindkeys -k
background::xev
::ssh_esgaroth_quota::ssh 1791esgaroth quota
autosize::df -Th
free -h
sudo ip link set wlan0 down
sudo ip link set wlan0 up
mpc --quiet shuffle
mpc --quiet seek 0
mpc clear && mpc add / && mpc shuffle # make MPD queue all songs in random order
{ mpc clear && mpc load favorites.m3u; } >/dev/null
f() { mpc search any "$1" | mpc insert; }; f amsterdam
umount ~/s5g
umount ~/v8x
sysctl kernel.sysrq
rclone ls dropbox:
rclone lsl dropbox:
pydoc str
wmctrl -l
i3-msg -t get_workspaces | jq -C
i3-msg -t get_tree | jq -C
i3-save-tree
i3-msg 'move workspace to output DisplayPort-4 DisplayPort-5 DisplayPort-6'
i3-msg 'move workspace to output eDP'
background::exec feh --sort mtime ~/.config/signal/attachments # view photos from Signal
background::exec feh --sort mtime ~/screenshots
cat /proc/sys/kernel/sysrq
cat /sys/module/usbcore/parameters/autosuspend
cat /proc/cmdline # check what kernel parameters we booted with
>/dev/null trans -speak en: spinach
amixer set Master mute
kill -l
ipa
iipa
gatewayip
route
arp
curl -s ipinfo.io
daemon::sshuttle -D -r bamfurlong 192.168.1.0/24
cat /sys/class/backlight/intel_backlight/{,max_}brightness
> /sys/class/backlight/intel_backlight/brightness echo 0
> /sys/class/backlight/intel_backlight/brightness echo 128
> /sys/class/backlight/intel_backlight/brightness echo 255
xsetroot -solid black
ulimit -a
cat /etc/os-release
cat /etc/passwd
mount
xterm::systemctl status
xterm::systemctl list-units
follow::resize 56 80; systemctl list-unit-files::systemctl list-unit-files
follow::resize 56 80; systemctl --global list-unit-files::systemctl --global list-unit-files
follow::resize 56 80; systemctl --user list-unit-files::systemctl --user list-unit-files
xterm::coredumpctl list
du -sh /var/lib/systemd/coredump
journalctl --disk-usage
::resize 8 100; crontab -l::crontab -l
background::gpg --export --export-options export-minimal --armor '3A1A48ABF4BD4C6D60133CC3C4FDE68734E7F155!' | while dd bs=512 count=1 status=none | qrencode --size=9 -o - | feh -; do :; done
gpg --export-secret-subkeys --export-options export-minimal --armor '3A1A48ABF4BD4C6D60133CC3C4FDE68734E7F155!' | while dd bs=512 count=1 status=none | qrencode --size=9 -o - 2>/dev/null | feh - 2>/dev/null; do :; done
::resize 20 88; cpupower frequency-info::cpupower frequency-info
sudo cpupower frequency-set --governor powersave >/dev/null
sudo cpupower frequency-set --governor performance >/dev/null
sudo cpupower frequency-set --governor powersave --max 400MHz >/dev/null # sloth/turtle mode
sudo cpupower frequency-set --governor performance --max 9001MHz >/dev/null # speed mode
::resize 56 80; exec pstree -GTC age::pstree
follow::hide && cd ~/passwords && git remote | xargs -L1 -P0 git push || alert
follow::resize 42 76; pass git log::pass git log
follow::resize 42 76; PINENTRY_USER_DATA=spawn-xterm pass git log -p::pass git log -p
follow::resize 56 88; PINENTRY_USER_DATA=spawn-xterm tig -C ~/passwords::tig -C ~/passwords
less::resize 56 88; git -C ~/bash-history log --color=always --format='format:%ai (%ar)' -U0 --ws-error-highlight=none 8b8f6ae01d11b1d294f68b6ac85df85e4f61179a.. | sed -u '/^\x1b\[1m/d; /^\x1b\[36m@@/d; /^\x1b\[32m+#[0-9]\{10\}\x1b\[m$/d; s/^\(\x1b\[32m\)+/\1/' | less -RSX || turn ${?/141/0}::git -C ~/bash-history log -U0
follow::resize 56 88; tig -C ~/bash-history::tig -C ~/bash-history
follow::vdirsyncer sync
nostdout::gpg --sign --armor <<< mellon
background::exec xterm -name 'floating xterm' -e 'stty -ixon; forge'::forge
background::exec xterm -name 'floating xterm' -e 'stty -ixon; reforge'::reforge
::resize 22 80; cat /etc/pacman.d/mirrorlist::cat /etc/pacman.d/mirrorlist
follow::git -C ~/wiki pull --ff-only
::resize 28 98; xset q::xset q
cd /sys/class/backlight/intel_backlight && sudo chgrp video brightness && sudo chmod g+w brightness
EOF
) || exit

turn() {
   return "$1"
}

gatewayip() {
   ip route | awk '/^def/{print $3}'
}

NetHack() {
   [[ $(i3-msg '[instance="^nethack$"] focus') == '[{"success":true}]' ]] && return
   exec xterm -fa 'Cascadia Code' -fs 12.5 -xrm 'XTerm*VT100.renderFont: true' \
      -b 15 -bw 0 -name nethack -e nethack
}

lock() {
   nohup lock &>/dev/null &
   sleep 0.001
   if [[ $(cat /sys/class/power_supply/BAT0/status) == 'Discharging' ]]; then
      xset dpms force off
   fi
}

# A precondition of this function is $1 <= $2 (or $# == 0).
charge_thresholds() {
   if (( $# == 0 )); then
      cat /sys/class/power_supply/BAT0/charge_{start,stop}_threshold
      return
   fi
   # This can fail because it may try to set charge_start_threshold to a value bigger than
   # the current charge_stop_threshold.
   echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   retry=$?
   # In theory this fails when trying to set charge_stop_threshold to a value smaller than
   # charge_start_threshold, but we already adjusted charge_start_threshold.  If adjusting
   # charge_start_threshold failed because the new charge_start_threshold ($1) is bigger
   # than the old charge_stop_threshold, then the new charge_stop_threshold ($2) is bigger
   # than the old charge_start_threshold, and we are fine:
   #    old charge_start_threshold <= old charge_stop_threshold < $1 <= $2
   echo "$2" | sudo tee /sys/class/power_supply/BAT0/charge_stop_threshold >/dev/null
   if (( retry )); then
      echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   fi
}

cal() {
   unbuffer cal "$@"
}

ssh_esgaroth_quota() {
   resize 7 123 && ssh esgaroth quota
}

xev() {
   i3-msg workspace xev
   xterm -e xev -rv
}

hide() {
   i3-msg -q 'move scratchpad'
}

alert() {
   notify-send - 'Something went wrong…'
   return 1
}

resize() {
   i3-msg "resize set $(($2 * 14 + 12)) $(($1 * 26 + 12)); move position center" >/dev/null
}

key=${fzf_output[1]}

if [[ $key == alt-enter || ${#fzf_output[@]} == 2 ]]; then
   # Alt+Enter was used or there is no match.  We'll run the query.
   selection=${fzf_output[0]}
else
   selection=${fzf_output[2]}
fi

[[ $selection ]] || exit

if [[ $selection != *::* ]]; then
   command_type=
   selected_command=$selection
else
   command_type=${selection%%::*}
   selected_command=${selection#*::}
   selected_command=${selected_command%::*}
fi

if [[ $key == ctrl-e ]]; then
   read -rep '$ ' -i "$selected_command" selected_command
elif [[ $command_type != less ]]; then
   printf '$ %s\n' "$selected_command"
fi

if [[ $command_type == background ]]; then
   # I also tried using `disown` and `nohup`, but neither prevents programs from being
   # killed immediately when XBindKeys launches this script with `xterm -e`.
   trap '' SIGHUP
   exec &>/dev/null
   eval "$selected_command" &
elif [[ $command_type == daemon ]]; then
   trap '' SIGHUP
   output=$(eval "$selected_command" 2>&1)
elif [[ $command_type == autosize ]]; then
   output=$(eval "$selected_command" 2>&1)
   # shellcheck disable=SC2046
   resize $(wc -lL <<< "$output")
   sleep 0.01
elif [[ ! $command_type || $command_type == noless ]]; then
   output=$(eval "$selected_command" 2>&1)
elif [[ $command_type == follow || $command_type == less ]]; then
   eval "$selected_command"
   status=$?
   if (( status )); then
      tput civis
      printf '\e[31m%s\e[m\n' $status
      read -rn1
   fi
elif [[ $command_type == browse ]]; then
   trap '' SIGHUP
   $BROWSER "$selected_command" &
   i3-msg '[class="^firefox-esr$"] focus'
elif [[ $command_type == evalbrowse ]]; then
   trap '' SIGHUP
   eval '$BROWSER' "$selected_command" &
   i3-msg '[class="^firefox-esr$"] focus'
elif [[ $command_type == xterm ]]; then
   trap '' SIGHUP
   eval 'exec xterm -e' "$selected_command" &
elif [[ $command_type == man ]]; then
   trap '' SIGHUP
   # shellcheck disable=SC2086
   xterm -sl 0 -name 'floating man' -geometry 88x68 -e man --nj --nh $selected_command &
elif [[ $command_type == nostdout ]]; then
   output=$(eval "$selected_command" 2>&1 1>/dev/null)
fi

if [[ $output ]]; then
   if [[ $command_type != noless && $command_type != autosize ]] &&
      (( $(wc -l <<< "$output") >= $(tput lines) ))
   then
      printf '$ %s\n%s' "$selected_command" "$output" | less -R
   else
      tput civis
      printf '%s' "$output"
      read -rn1
   fi
fi
