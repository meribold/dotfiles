#!/usr/bin/env bash

set -o nounset -o pipefail

gatewayip() {
   ip route | awk '/^def/{print $3}'
}

lock() {
   nohup lock &>/dev/null &
   sleep 0.001
}

# A precondition of this function is $1 <= $2.
charge_thresholds() {
   # This can fail because it may try to set charge_start_threshold to a value bigger than
   # the current charge_stop_threshold.
   echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   retry=$?
   # In theory this fails when trying to set charge_stop_threshold to a value smaller than
   # charge_start_threshold, but we already adjusted charge_start_threshold.  If adjusting
   # charge_start_threshold failed because the new charge_start_threshold ($1) is bigger
   # than the old charge_stop_threshold, then the new charge_stop_threshold ($2) is bigger
   # than the old charge_start_threshold, and we are fine:
   #    old charge_start_threshold <= old charge_stop_threshold < $1 <= $2
   echo "$2" | sudo tee /sys/class/power_supply/BAT0/charge_stop_threshold >/dev/null
   if (( retry )); then
      echo "$1" | sudo tee /sys/class/power_supply/BAT0/charge_start_threshold >/dev/null
   fi
}

toggle_thinklight() {
   echo $((($(cat '/sys/class/leds/tpacpi::thinklight/brightness') + 1) % 2)) |
      sudo dd status=none of='/sys/class/leds/tpacpi::thinklight/brightness'
}

wifail() {
   command wifail >/dev/null && sleep 0.5
}

ethinfo() {
   command ethinfo >/dev/null && sleep 0.5
}

# These commands are halfway between keybind and `snippets.bash` material.  Plus, there's
# only so many keys on a keyboard.
selected_command=$(fzf <<'EOF'
killall xbindkeys; (cd ~ && xbindkeys)
$FIREFOX --new-tab $(gatewayip) # try to open a router's web interface
cat /sys/class/power_supply/BAT0/{energy,charge}_{now,full} 2>/dev/null
lock
dates
wifail
ethinfo
auracle outdated
for i in {1..8}; do man -k -s "$i" . | awk '{ print $1, $2 }' > "/tmp/man$i.txt"; done
i3-msg exit
i3-msg -q reload
i3-msg restart
ip address show eth0
ip address show wlan0
ip route show dev wlan0
iw wlan0 info
iw wlan0 link
systemctl suspend
systemctl poweroff
xset dpms force off # turn off the display
xrandr --output LVDS-1 --off # disable the internal display
cat /sys/class/power_supply/BAT0/charge_{start,stop}_threshold
cat /sys/class/power_supply/BAT0/status
charge_thresholds 40 60
charge_thresholds 60 80
charge_thresholds 95 100
toggle_thinklight
EOF
) || exit $?

[[ $selected_command ]] || exit $?

output=$(eval "$selected_command")

if [[ $output ]]; then
   if (( $(wc -l <<< "$output") >= 14 )); then
      printf '$ %s\n%s' "$selected_command" "$output" | less
   else
      tput civis
      printf '$ %s\n%s' "$selected_command" "$output"
      read -rn1
   fi
fi
