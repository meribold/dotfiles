# My main NeoMutt configuration file.  Lots of documentation is in neomuttrc(5) and
# <file:///usr/share/doc/neomutt/manual.html> or <https://neomutt.org/guide/>.  I don't
# know if my configuration works well with unpatched Mutt anymore.  It probably doesn't.

# Configure native IMAP support.  http://dev.mutt.org/trac/wiki/UseCases/Gmail
# http://wiki.archlinux.org/index.php/Mutt#Native_IMAP_support
set imap_user=lb.waym@gmail.com
# Call pass(1) to get the account's password.
set imap_pass=`pass show google/lb.waym 2>/dev/null`
set folder=imaps://imap.gmail.com/ # http://dev.mutt.org/trac/wiki/MuttGuide/Folders
set spoolfile=+INBOX
set copy=no # Don't save copies of outgoing messages (Gmail already saves them).
set postponed=+[Gmail]/Drafts # Save drafts remotely.
set imap_check_subscribed # Check all subscribed IMAP folders.

# Configure native SMTP support.
set realname="Lukas Waymann"
set from=lb.waym@gmail.com
set smtp_url=smtps://lb.waym@smtp.gmail.com
# Call pass(1) to get the account's password again.  This time to use it for sending mail
# via SMTP.  The GPG key will be unlocked now because we already used pass to set
# `imap_pass`.  When not setting `smtp_pass`, Mutt prompts for the password when first
# sending mail.  See <http://mutt.org/doc/manual/#imap-pass>.
set smtp_pass=`pass show google/lb.waym 2>/dev/null`
set ssl_force_tls

# Default is "us-ascii:iso-8859-1:utf-8".  Really?
# http://wiki.archlinux.org/index.php/Mutt#E-mail_character_encoding
set send_charset="utf-8"

# Empty by default.  This fixes most messages without character encoding indication that I
# get (Mutt assumes "us-ascii" when assumed_charset is empty).
set assumed_charset="cp1252"
# Character set alias: treat iso-8859-1 as an alias for cp1252.
charset-hook ^iso-8859-1$ cp1252
# Background: US-ASCII is basically 8-bit nowadays, so misinterpreting actual ASCII as
# some ASCII-based encoding should be fine.  CP-1252 (or windows-1252) is Microsoft's
# bastardized version of ISO-8859-1 (latin1).  Apparently mislabeling CP-1252 encoded text
# as ISO-8859-1 is so ubiquitous that most programs assume it deliberately and HTML5
# requires that documents advertised as ISO-8859-1 are parsed as CP-1252.  Computers suck.

# Enable and configure the [sidebar](http://www.mutt.org/doc/manual/#sidebar).  See
# <http://stevelosh.com/blog/2012/10/the-homely-mutt/#configuring>.
set sidebar_visible=yes
set sidebar_width=24

# Taken from <http://stevelosh.com/blog/2012/10/the-homely-mutt/#reading-email>.  Sort by
# [threads](http://www.mutt.org/doc/manual/#threads), displaying them as a tree structure.
# Sort entire threads (and messages that aren't part of a thread) in relation to each
# other by the date the thread's most recent message was received (or the date the message
# was received).  Recent threads and messages go to the top.
set sort=threads
set sort_aux=reverse-last-date-received

# Configure GnuPG.
set pgp_use_gpg_agent
set pgp_auto_decode
set pgp_show_unusable=no
# Use command substitution to source the first available GnuPG configuration file and
# don't complain if there is none.  The first and third files are installed by the
# official [Mutt package][1] of Arch Linux and are identical as of 2017-07-25.  The
# [NeoMutt package from Arch's community repository][2] includes the fourth file.  On
# Ubuntu, we have `/etc/Muttrc.d/gpg.rc`.  Also see [3] and [4].
#
# XXX: I think Bash-specific functionality cannot be used here (Bash is probably invoked
# as sh).
#
# TODO: all this appears to be redundant on Ubuntu.  Mutt always reads `/etc/Muttrc`
# (before `~/.mutt/muttrc`) which sources `/etc/Muttrc.d/gpg.rc` (and all other `.rc`
# files in `/etc/Muttrc.d`).  See [5].
#
# From /var/log/pacman.log:
# [2014-03-23 01:32] [PACMAN] Running 'pacman -S mutt'
# [2014-03-23 01:32] [ALPM-SCRIPTLET]
# [2014-03-23 01:32] [ALPM-SCRIPTLET] ==> For GPG support, add the following to your muttrc:
# [2014-03-23 01:32] [ALPM-SCRIPTLET] ==> source /etc/Muttrc.gpg.dist
# [2014-03-23 01:32] [ALPM-SCRIPTLET]
#
# [1]: https://www.archlinux.org/packages/extra/x86_64/mutt/files/
# [2]: https://www.archlinux.org/packages/community/x86_64/neomutt/
# [3]: https://wiki.archlinux.org/index.php/Mutt#Encrypt_and_sign_mail_.28GnuPG.29
# [4]: https://dev.mutt.org/trac/wiki/ConfigTricks
# [5]: https://dev.mutt.org/doc/manual.html#configuration-files
source `for file in /etc/Muttrc.gpg.dist /etc/Muttrc.d/gpg.rc \
                    /usr/share/doc/mutt/samples/gpg.rc \
                    /usr/share/doc/neomutt/samples/gpg.rc /dev/null; do \
           if [ -f "$file" ] || [ "$file" = /dev/null ]; then \
              echo "$file"; \
              break; \
           fi \
        done`
# We need to change some variables from Muttrc.gpg.dist to also include
# "--pinentry-mode loopback" and/or "--encrypt-to 0xC4592C12" (so I can read my own sent
# mail).  Other than that, the commands are the same as in /etc/Muttrc.gpg.dist.
set pgp_decode_command="gpg --status-fd=2 %?p?--passphrase-fd 0 --pinentry-mode loopback? --no-verbose --quiet --batch --output - %f"
set pgp_decrypt_command="gpg --status-fd=2 %?p?--passphrase-fd 0 --pinentry-mode loopback? --no-verbose --quiet --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0 --pinentry-mode loopback? --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0 --pinentry-mode loopback? --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="$PGPEWRAP gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust --encrypt-to 0xC4592C12 -- -r %r -- %f"
set pgp_encrypt_sign_command="$PGPEWRAP gpg %?p?--passphrase-fd 0 --pinentry-mode loopback? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0xC4592C12 -- -r %r -- %f"
set crypt_autosign # Always attempt to cryptographically sign outgoing messages.
set pgp_sign_as="C4592C12"

source ~/.mutt/per-recipient-rules

set abort_nosubject=no
set abort_unmodified=no

set alias_file="~/.mutt/aliases"
source $alias_file

# Cache message headers here.  This takes very little space and makes opening large
# folders much faster.  See http://www.mutt.org/doc/devel/manual.html#header-caching.
set header_cache=~/.mutt/cache/headers/

# Copied from http://gitlab.com/goobook/goobook.
set query_command="goobook query '%s'"
bind editor <Tab> complete-query

# Based on <https://wiki.archlinux.org/index.php/Mutt#Viewing_HTML>.  TODO: add a keyboard
# macro like the one in the ArchWiki article but for viewing HTML attachments with Lynx?
set mailcap_path="~/.mutt/mailcap"
# When a message contains both plain text and HTML, prefer viewing plain text.
alternative_order text/plain text/html
# When an HTML attachment doesn't have a plain text alternative, use Lynx (which is
# defined as a MIME viewer for HTML in my mailcap file) to automatically convert the HTML
# to text and display the text in the pager.  See [1].  Note: most HTML mail I get
# contains an alternative plain text attachment, but this is often less readable than the
# result of rendering the HTML attachment with Lynx would be.  TODO: it may therefore be
# preferable to drop the `alternative_order` command.
# [1]: https://dev.mutt.org/doc/manual.html#auto-view
auto_view text/html
# Display text representations of any attached PDFs in the pager using `pdftotext`
# (specified in the mailcap file).
auto_view application/pdf

# Customize the message [index format][].  Use the [folder-hook][] command and the
# [cond-date patch][] to keep it concise.  The formats used for date and time are
# derivative of [ISO 8601][].  See printf(3) and strftime(3).
# [index format]: http://www.mutt.org/doc/manual/#index-format
# [folder-hook]: http://www.mutt.org/doc/manual/#folder-hook
# [cond-date patch]: http://www.mutt.org/doc/manual/#folder-hook
# [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601
folder-hook . "set index_format='%4C  %Z  %<[y?%<[m?%<[d?%[   %H:%M]&%[  %a %d]>&%[   %m-%d]>&%[%y-%m-%d]>  %-40.40a  %s%*   %4c'"
folder-hook [Ss]ent "set index_format='%4C  %Z  %<[y?%<[m?%<[d?%[   %H:%M]&%[  %a %d]>&%[   %m-%d]>&%[%y-%m-%d]>  %-40.40t  %s%*   %4c'"

# Customize the status line at the bottom.  The format string reduces the amount of
# information compared to the default and doesn't use hyphens for padding.  See
# <http://www.mutt.org/doc/manual/#status-format>.
set status_format="%f%?V?/%V? [%m%?M?, %M shown?%?n?, %n new?%?o?, %o old?%?d?, %d deleted?%?F?, %F flagged?%?t?, %t tagged?%?p?, %p postponed?] %> %P"

# I don't think any of the information we can show in the status line while in the compose
# menu is useful (see <file:///usr/share/doc/neomutt/manual.html#compose-format>).  Also
# get rid of the hyphens again.
set compose_format=

# Customize the status line shown when reading a message (the status line for the pager).
# See <https://dev.mutt.org/doc/manual.html#pager-format>.
set pager_format="%s%*   %P"

# See <file:///usr/share/doc/neomutt/manual.html#attach-format> and
# <file:///usr/share/doc/neomutt/manual.html#nested-if>.  The "%u%D" part of the default
# format string is about whether an attachment was deleted or is marked for deletion.  I
# don't delete attachments, so I dropped it.  TODO: can we use color and drop "%t"?
set attach_format="%T%?t?*?%<d?%d%>   [%m/%M, %e%?C?, %C?]  %4s&[%m/%M]%>   [%e%?C?, %C?]  %4s>"

# Hide the line showing a few key bindings that's normally at the top of the window.  See
# <http://www.mutt.org/doc/manual/#help>.
set nohelp

# Color Scheme {{{1
# Based on colors used by [jellybeans.vim](https://github.com/nanotech/jellybeans.vim) and
# [jellyjam.vim](https://github.com/meribold/jellyjam.vim) in 256-color terminals.
# `color0` to `color15` are those defined in `Xresources`.  `color16` to `color255` should
# be these: <https://commons.wikimedia.org/wiki/File:Xterm_256color_chart.svg>.  See
# <file:///usr/share/doc/mutt/manual.html#color>.

#     <object>   <fg>    <bg>
color attachment yellow  color0
color error      red     color0
color hdrdefault color8  color0 # Default color of the message header in the pager.
color indicator  color15 red
color markers    red     color0 # The + at the beginning of wrapped lines in the pager.
color message    white   color0
color normal     white   color0
color prompt     white   color0
color quoted     color8  color0
color quoted1    color8  color0
color quoted2    color8  color0
color quoted3    color8  color0
color quoted4    color8  color0
color quoted5    color8  color0
color quoted6    color8  color0
color quoted7    color8  color0
color quoted8    color8  color0
color quoted9    color8  color0
color search     default magenta
color signature  color8  color0
color status     black   blue
color tilde      default color0 # Used to pad blank lines in the pager.
color tree       default color0

# Regexp patterns for the message header.
color header     red     color0 ^From
color header     red     color0 ^Subject

# Regexp patterns for the index.
color index      red     color0 ~F # Flagged
color index      green   color0 ~N # New
color index      yellow  color0 ~T # Tagged
color index      color8  color0 ~D # Deleted

# Key Bindings {{{1
# Unbind some keys {{{2
bind generic z noop
bind generic Z noop
bind index,pager d noop

# Vim-ish {{{2
bind index g noop
bind index gg first-entry
bind index G last-entry
bind index,pager  half-up
bind index,pager  half-down
bind pager j next-line
bind pager k previous-line
bind pager g noop
bind pager gg top
bind pager G bottom
bind index zb current-bottom
bind index zz current-middle
bind index zt current-top

# Gmail-esque {{{2
bind index,pager c mail
bind index o display-message
bind pager,attach,browser u exit
bind index u imap-fetch-mail
macro index,pager e "<save-message>=[Gmail]/All%20Mail<enter><enter>" \
   "\"archive\" the current entry (move it to [Gmail]/All Mail)"
bind index x tag-entry
bind pager x tag-message
bind index,pager s flag-message
bind index,pager a group-reply
# Mail is only removed from [Gmail]/Inbox (and kept everywhere else, I think) when using
# Mutt's normal delete action with Gmail (called "Archive" in the Gmail web app).  This
# macro seems to work.  TODO: undelete.
macro index,pager \# "<save-message>=[Gmail]/Trash<enter><enter>" \
   "\"delete\" the current entry (move it to [Gmail]/Trash)"
bind index,pager v save-message
# macro index,pager v "<save-message>?<toggle-mailboxes>" ""
bind index I toggle-new
bind index U toggle-new
bind pager U mark-as-new
macro index,pager gi "<change-folder>=INBOX<enter>" "open inbox"
macro index,pager gs "<change-folder>=[Gmail]/Starred<enter>" "open [Gmail]/Starred"
macro index,pager gt "<change-folder>=[Gmail]/Sent%20Mail<enter>" "open [Gmail]/Sent Mail"
macro index,pager gd "<change-folder>=[Gmail]/Drafts<enter>" "open [Gmail]/Drafts"
macro index,pager ga "<change-folder>=[Gmail]/All%20Mail<enter>" "open [Gmail]/All Mail"
macro index,pager gc "<shell-escape>$BROWSER https://contacts.google.com<return>" \
   "open Google Contacts in Firefox"

# Mutt-y (similar to Mutt's defaults) {{{2
bind index M middle-page # I'm pretty sure this didn't use to be necessary?  Anyway,
                         # NeoMutt's default keybinding for M in the index menu apparently
                         # is `show-log-messages`.
bind index L bottom-page # Provided by default in "generic" context but overridden.  M and
                         # H are Vim-ish by default as well.
bind pager <Space> half-down
bind pager - half-up
bind browser S unsubscribe
bind index,pager V view-attachments

# Other {{{2
bind index,pager O edit
macro index,pager go "<pipe-message>goobook add<return>" \
   "add the sender address to Google Contacts"
macro index,pager i "<copy-message>=INBOX<enter><enter>" "Copy the current entry to INBOX"

# Control the sidebar with the arrow keys.  Based on
# <http://stevelosh.com/blog/2012/10/the-homely-mutt/#reading-email>.
bind index,pager <Down>  sidebar-next
bind index,pager <Up>    sidebar-prev
bind index,pager <Right> sidebar-open
bind index,pager <Left>  sidebar-toggle-visible
# }}}1

# vim: nowrap fdm=marker
